# QSUB -q prem
# QSUB -s /bin/csh
# QSUB -lT 299
# QSUB -lt 250
# QSUB -lM 2Mw
# QSUB -eo

newacct 06010011
ja

# Read U.S. raob monthly stats Data Support Section DS391.0
# plot time series of a variable

# Singapore for MLS
# datasets from Wilbur
# 48694 has data that span 4/57 - 3/74
# 48698 has data that span 1/74 - present
# this program combines the two; note the early data are not consistent
#      at upper levels. perhaps that is why BarbN did not use 48694
#      at earlier times


cd $TMPDIR

if (-d /u0/shea/fcode) ln -s /u0/shea/fcode/* $TMPDIR
if (-d /usr/tmp/shea ) ln    /usr/tmp/shea/*  $TMPDIR

setenv     PNAME DS391_SING
batchname $PNAME.PRT

cat << "ENDCAT" >! main.f
      program ds391     ! original name: program gettsr
 
      parameter (nyrstrt=1957, nyrlast=1996, nmos=12, ntms=1
     *          ,nyrs=nyrlast-nyrstrt+1, nvmax=14, npmax=15  ! npmax.le.37
     *          ,nstmax=1)

      real xx    (ntms,0:npmax,nmos,nyrs,nvmax,nstmax)  ! "0" is sfc
      real xxclm (ntms,0:npmax,nmos,nvmax,nstmax)  ! long-term climatology
      real yrmohr(ntms,nmos,nyrs)
      integer  ixxwrk(0:npmax)

      integer ic(60),lpres(37)  ! do not use zero subscript with lpres   
     *      , ibuf(1006),irep(400),ihead(12),ip(50),id(50),nf(50)
     *      , ig(50),iuvwn(50), ihour(8),ifour(4)
      integer avz(50),avt(50),avdp(50),avu(50),avv(50),avuv(50)
     *      , up(50),vp(50),avulw(50),avvlw(50),avucpt(50),avvcpt(50)
     *      , avugz(50),avvgz(50),zvar(50),tvar(50),uvvar(50),fstz(50)
     *      , finz(50),fstw(50),finw(50)
      integer number(999)
      data ihour/21,0,3,6,9,12,15,18/

      data izero/1r0/                 ! note: hollerith
      character namprv*64             ! djs
      character namvar(nvmax)*8
      data namvar/'Z', 'T', 'U', 'V', 'TD', 'ULW', 'VLW'
     *           ,'UCPT', 'VCPT', 'ZVAR', 'TVAR'
     *           ,'UP', 'VP', 'Q' /
 
c LPRES - desired levels
c Note: to get all levels set lpres(1)=0
c .     to get selected levels set data lpres/p1,p2,...,pn/ where p1>p2 etc
c .     if surface is one of levels selected set p1=2000
c .     example: data lpres/ 0,36*0/ 
c .              data lpres/1000,850,700,500,400,300,250,200,150
c .                        ,100,70,50,30,20,10,22*0/
c .              data lpres/2000,1000,950,900,850,800,750,700,650,600,550
c .                        ,500,450,400,350,300,250,200,175,150,125,100,80
c .                        ,70,60,50,40,30,25,20,15,10,7,5,3,2,1/
      data lpres /2000  
     *           ,1000,850,700,500,400,300,250,200,150,100
     *           ,  70, 50, 30, 20, 10,21*0/ 

      call opngks

      ntape = 2        ! ntape = number of input tapes to access

c NBITS: for monthly means set nbits=214
c        for monthly means with zvar and tvar computed set nbits=237
c        for long term monthly means set nbits=281
c ISW  : no printing set isw = -1
c        to print u and v set isw=0
c        to print direction and speed set isw=1
c        to print direction and speed, and u and v in place of zvar and tvar
c           set isw=2

      isw   = -1
      nbits = 237
      nvsn  = 11       ! starting unit number (via assign)

      acon  = 180./3.14159265
      xmsg  = 1.e+36
      nsav  = nvsn-1
      jerr  = 0
      irec  = 0
      ielv  = 0

      call setvec (xx   ,nmos*nyrs*(npmax+1)*nvmax*nstmax,xmsg,ier)
      call setvec (xxclm,nmos*(npmax+1)*nvmax*nstmax     ,xmsg,ier)

      do nyr=1,nyrs
         nyear = nyr+nyrstrt-1
        do nmo=1,nmos
          do ntm=1,ntms
             fmo = real(nint(1000.*real(nmo-1)/real(nmos)))*0.001   
             fhr = 0.001*real(ntm-1)/real(ntms)
             yrmohr(ntm,nmo,nyr) = real(nyear) + fmo + fhr
c c c        write (*,"(' yrmohr=',3i5,3f15.6)") 
c c c*              nyear,nmo,ntm,fmo,fhr,yrmohr(ntm,nmo,nyr)
          enddo
        enddo
      enddo

      call edaint (i1mach(2),1,130,r1mach(3 )   ! for robust linear trend
     *            ,i1mach(9),ierr)

      lflag   = 0      ! useable data flag
      idprv   = 0      ! previous station id
      nstax   = 0
      latprv  = 0
      lonprv  = 0
      ielprv  = 0
      namprv(1:) = '                    ' 

      if (isw.ge.0) then
                    write (*,'(
     *           '' MONTHLY MEAN TIME SERIES RAWINSONDE STATISTICS'',//, 
     *           '' p - pressure in whole mb'',/,
     *           '' z - height in whole m'',/,
     *           '' t - temperature in tenths of degrees c'',/,
     *           '' n1 - count for z,t,zvar,tvar'',/,
     *           '' w - mixing ratio in tenths of g/kg'',/,
     *           '' n2 - count for w'',/,
     *           '' u - u-component of wind in tenths of m/sec'',/,
     *           '' v - v-component of wind in tenths of m/sec'',/,
     *           '' dir/spd - direction (degrees) and speed'',
     *           '' in tenths of m/sec'',/,
     *           '' uv - momentum transport in tenths of m2/sec2'',/,
     *           '' uvar - standard deviation of u in tenths'',/,
     *           '' vvar - standard deviation of v in tenths'',/,
     *           '' n3 - count for u,v,uv,uvar,vvar,''
     *           '' uvvar,uct,vct,ugz,vgz'',/,
     *           '' uw - u-component of latent heat transport'' 
     *           '' in tenths of cal/gm x m/sec'',/,
     *           '' vw - v-component of latent heat transport'' 
     *           '' in tenths of cal/gm x m/sec'')')

                    write (*,'(
     *           '' n4 - count for uw,vw'',/,
     *           '' uct - u-component of sensible heat transport''
     *           '' in cal/gm x m/sec'',/,
     *           '' vct - v-component of sensible heat transport''
     *           '' in cal/gm x m/sec'',/,
     *           '' ugz - u-component of transport of potential energy''
     *           '' in cal/gm x m/sec'',/,
     *           '' vgz - v-component of transport of potential energy''
     *           '' in cal/gm x m/sec'',/,
     *           '' zvar - standard deviation of z in whole units'',/,
     *           '' tvar - standard deviation of t in tenths'',/,
     *           '' uvvar - standard deviation of uv in tenths'',/,
     *           '' fz - first year height reported'',/,
     *           '' lz - last  year height reported'',/,
     *           '' fw - first year wind   reported'',/,
     *           '' lw - last  year wind   reported'',//)')
      endif

c read in desired ids (if any)

      nbr = 1
    5 read (5,'(i6)',end=6) number(nbr)
      write(*,'(i6)')       number(nbr)
      nbr = nbr+1
      if (nbr.ge.999) then
          write (*,'(//,'' nbr greater than 999 [change dim]: stop'')')   
          stop
      endif
      go to 5
    6 nbr = nbr-1
      write (*,'(//,'' Number of desired ids='',i5,//)') nbr

c Read the data
  
   10 call rptin (nvsn,ibuf,irep   ,nwds,1 ,400,ieof)
      if (ieof.eq.1) then
          write (*,'(//,'' End-of-File on nvsn='',i3,//)') nvsn
          nvsn   = nvsn+1               ! new vsn (if any)
          ibuf(1)= 0                    ! reset for proper read
                                                         
          if (nvsn.gt.(ntape+nsav)) then 
              if (lflag.ne.0) then
                  call climat (xx,ntms,npmax,nmos,nyrs,nvmax,nstmax,xmsg
     *                        ,nyrstrt,nyrlast,nsta,xxclm,ier)
              ntm = 1
              nst = 1
              do nv=2,3     ! t, u only
              write (*,"(a,': Pressure:',3x,17i5)") namvar(nv)(1:1)
     *                      ,(lpres(np),np=2,npmax+1)  ! due to not starting at 1 
              do nyr=1,nyrs
                 nyear = (nyrstrt+nyr-1) - 1900
               do nmo=1,nmos
                do np=0,npmax    ! switch to integer for io purposes
                   if (xx(ntm,np,nmo,nyr,nv,nst).ne.xmsg) then
                       ixxwrk(np) = nint(xx(ntm,np,nmo,nyr,nv,nst)*10.)
                   else
                       ixxwrk(np) = -999
                   endif
                enddo
                write (*,"(i7,i2,2i3,17i5)") idprv,nv,nyear,nmo
     *                    ,(ixxwrk(np),np=1,npmax) 
               enddo
              enddo
              enddo
                  call tsplot (xx,ntms,npmax,nmos,nyrs,nvmax,nstmax,xmsg
     *                        ,ivsn,idprv,latprv,lonprv,ielprv,namprv
     *                        ,lpres,nsta,namvar,nyrstrt,nyrlast
     *                        ,xxclm,yrmohr,ier) 
                  write (*,'(//,'' LAST TSPLT'', i5)')  isw 
              endif
              lflag = 0
              go to 99
          endif
          rewind nvsn
          go to 10   
      endif                            

      call gbyte(ibuf(7),nc,0,4)
      nc = nc*4
      call gbyte(irep   ,itype,nc+12,48)

      if (itype.eq.0) then
          do 20 i=2,12
   20     ihead(i-1)=irep(i)
          if (nc.eq.0) then
              call gbytes(irep,ihead,nc+60,60,0,11)
              call gbytes(irep,ic,nc+180,6,0,60)
              call dpcasc(ic,ic,60)
              call sbytes(ihead(3),ic,0,8,0,32)
              call sbytes(ihead(7),ic(41),0,8,0,8)
              call sbytes(ihead(8),ic(51),0,8,0,8)
          endif
          js=8hwban     
          if(ihead(2).eq.1) js=8hwmo     
          if(ihead(2).eq.0) js=8hspec      

          call gbytes(ihead(7),ic,0,8,0,5)
          lat=0
          do i=2,5
             if(ic(i).eq.1r ) ic(i)=izero
             ic(i)=ic(i)-izero
             lat=lat*10+ic(i)
          enddo
          if(ic(1).eq.1rS) lat=-lat

          call gbytes(ihead(8),ic,0,8,0,6)
          lon=0
          do i=2,6
             if(ic(i).eq.1r ) ic(i)=izero
             ic(i)=ic(i)-izero
             lon=lon*10+ic(i)
          enddo           
          if(ic(1).eq.1rW) lon=360-lon

          call gbytes(ihead(9),ic,0,8,0,6)
          ielv=0
          do i=2,6
             if(ic(i).eq.1r ) ic(i)=izero
             ic(i)=ic(i)-izero
             ielv=ielv*10+ic(i)
          enddo
          if(ic(1).eq.1r-) ielv = -ielv
          go to 10                      ! return to rptin after unraveling
      endif    

c     call gbyte(irep   ,ksta,   13,20) ! for old statistical tapes
      call gbyte(irep   ,ksta,nc+12,21)
c*** SPECIAL FOR 'COMBINED' SINGAPORE***
      if (ksta.eq.486940) then
          ksta = 486980  ! same station
          ihead(1) = ksta
      endif
      irec = irec+1
      if (ksta.ne.ihead(1)) then        ! id check
          write (*,'('' ksta error: '',1x,3i10)') irec,ksta,ihead(1)
          stop
      endif

c plot station stuff if this is a new id

      if (ksta.ne.idprv .and. idprv.ne.0) then
          if (lflag.ne.0) then 
              call climat (xx,ntms,npmax,nmos,nyrs,nvmax,nstmax,xmsg
     *                    ,nyrstrt,nyrlast,nsta,xxclm,ier)
              ntm = 1
              nst = 1
              do nv=2,3     ! t, u only
              do nyr=1,nyrs
                 nyear = (nyrstrt+nyr-1) - 1900
               do nmo=1,nmos
                do np=0,npmax    ! switch to integer for io purposes
                   if (xx(ntm,np,nmo,nyr,nv,nst).ne.xmsg) then
                       ixxwrk(np) = nint(xx(ntm,np,nmo,nyr,nv,nst)*10.)
                   else
                       ixxwrk(np) = -999
                   endif
                enddo
                write (*,"(i7,i2,2i3,17i5)") idprv,nv,nyear,nmo
     *                    ,(ixxwrk(np),np=1,npmax) 
               enddo
              enddo
              enddo
              call tsplot (xx,ntms,npmax,nmos,nyrs,nvmax,nstmax,xmsg
     *                    ,ivsn,idprv,latprv,lonprv,ielprv,namprv
     *                    ,lpres,nsta,namvar,nyrstrt,nyrlast
     *                    ,xxclm,yrmohr,ier)
          endif
                           ! if many stations r to be retained; change the following  
              call setvec (xx,nmos*nyrs*(npmax+1)*nvmax*nstmax,xmsg,ier)
              call setvec (xxclm,nmos*(npmax+1)*nvmax*nstmax,xmsg,ier)
              lflag = 0    ! reset useful data flag
      endif

      idprv   = ihead(1)   ! previous station id
      latprv  = lat
      lonprv  = lon
      ielprv  = ielv
      write (namprv(1:32),'(4a8)') (ihead(i),i=3,6)

      call gbyte(irep   ,nyr,nc+33,7)
      call gbyte(irep   ,nmo,nc+40,4)
      call gbyte(irep   ,ktime,nc+44,5)
      call gbyte(irep   ,l,nc+49,3)
      call gbyte(irep   ,kk,nc+52,6)
      call gbyte(irep   ,isourc,nc+58,7)
      call gbyte(irep   ,ipsn,nc+65,5)

c select reports here

      nyear = 1900 + nyr

      lonp = lon
      if (lonp.lt.0) lonp = 360+lonp   ! make lon positive 

      if (nyear.lt.nyrstrt .or. nyear.gt.nyrlast) go to 10
      if (ktime.ne. 0) go to 10

c if nbr>0 the chk for desired id
c .   else check for position or whatever

      if (nbr.gt.0) then
          do 31 j=1,nbr
          if (ksta.eq.number(j)) go to 35
   31     continue
      else 
c c c     if (lat .lt.2500  .or. lat .gt. 5000) go to 10
c c c     if (lonp.gt.23000 .or. lonp.gt.30000) go to 10
      endif
      go to 10                    ! must not be desired data  

   35 continue                    ! unpack the data

      call gbytes(irep,ip         ,nc+120,11,nbits-11,kk)
      call gbytes(irep,avz        ,nc+131,16,nbits-16,kk)
      call gbytes(irep,avt        ,nc+147,11,nbits-11,kk)
      call gbytes(irep, id        ,nc+158, 5,nbits- 5,kk)
      call gbytes(irep,avdp       ,nc+163,10,nbits-10,kk)
      call gbytes(irep,nf         ,nc+173, 5,nbits- 5,kk)
      call gbytes(irep,avu        ,nc+178,12,nbits-12,kk)
      call gbytes(irep,avv        ,nc+190,12,nbits-12,kk)
      call gbytes(irep,avuv       ,nc+202,18,nbits-18,kk)
      call gbytes(irep,up         ,nc+220, 9,nbits- 9,kk)
      call gbytes(irep,vp         ,nc+229, 9,nbits- 9,kk)
      call gbytes(irep,ig         ,nc+238, 5,nbits- 5,kk)
      call gbytes(irep,avulw      ,nc+243,13,nbits-13,kk)
      call gbytes(irep,avvlw      ,nc+256,13,nbits-13,kk)
      call gbytes(irep,iuvwn      ,nc+269, 5,nbits- 5,kk)
      call gbytes(irep,avucpt     ,nc+274,15,nbits-15,kk)
      call gbytes(irep,avvcpt     ,nc+289,15,nbits-15,kk)
      call gbytes(irep,avugz      ,nc+304,15,nbits-15,kk)
      call gbytes(irep,avvgz      ,nc+319,15,nbits-15,kk)
      if (nbits.gt.214) then
          call gbytes(irep,zvar       ,nc+334,13,nbits-13,kk)
          call gbytes(irep,tvar       ,nc+347,10,nbits-10,kk)
          if (nbits.eq.281) then
              istart=ktime/3+1
              istop=istart+3
              call gbytes(irep,ifour,nc+70,12,0,4)
              call gbytes(irep,uvvar      ,nc+357,16,nbits-16,kk)
              call gbytes(irep,fstz       ,nc+373, 7,nbits- 7,kk)
              call gbytes(irep,finz       ,nc+380, 7,nbits- 7,kk)
              call gbytes(irep,fstw       ,nc+387, 7,nbits- 7,kk)
              call gbytes(irep,finw       ,nc+394, 7,nbits- 7,kk)
          endif
      endif

      if (isw.ge.0) then
          write (*,'(1x,a4,1x,i6,1x,4a8,3x,2a6,i5
     *              ,''m  seq='',i3,''  mo/yr/gmt''
     *              ,i3,i4,i3,'' sfc p count='',i3,i10)')
     *                js,ksta,(ihead(i),i=3,10)
     *              , nmo,nyr,ktime,ipsn,isourc

          if (nbits.eq.281) 
     *                  write (*,'('' year/months averaged from each''
     *                             ''  time period''
     *                        ,        1x,4(i2,''z/''),4i5)')
     *                                 (ihour(i),i=istart,istop),ifour           
          if (isw.eq.0) write(*,'(4x,1hp,5x,1hz,4x,1ht, 3h n1,2x,1hw
     *                           ,3h n2,5x,1hu,5x,1hv,5x,2huv
     *                           ,1x,4huvar,1x,4hvvar,3h n3
     *                           ,4x,2huw,4x,2hvw, 3h n4,4x,3huct
     *                           ,4x,3hvct,4x,3hugz,4x,3hvgz,1x,4hzvar
     *                           ,1x,4htvar,1x,5huvvar,1x,2hfz
     *                           ,1x,2hlz,1x,2hfw,1x,2hlw)')
          if (isw.eq.1) write(*,'(4x,1hp,5x,1hz,4x,1ht, 3h n1,2x,1hw
     *                           ,3h n2,9h dir/spd ,  5x
     *                           ,2huv,1x,4huvar,1x,4hvvar,   3h n3
     *                           ,4x,2huw,4x,2hvw, 3h n4,4x,3huct
     *                           ,4x,3hvct,4x,3hugz,4x,3hvgz,1x,4hzvar
     *                           ,1x,4htvar,1x,5huvvar,1x,2hfz
     *                           ,1x,2hlz,1x,2hfw,1x,2hlw)')
          if (isw.eq.2) write(*,'(4x,1hp,5x,1hz,4x,1ht, 3h n1,2x,1hw
     *                           ,3h n2,9h dir/spd ,  5x
     *                           ,2huv,1x,4huvar,1x,4hvvar,   3h n3
     *                           ,4x,2huw,4x,2hvw, 3h n4,4x,3huct
     *                           ,4x,3hvct,4x,3hugz,4x,3hvgz,1x,4h  u 
     *                           ,1x,4h  v ,1x,5huvvar,1x,2hfz
     *                           ,1x,2hlz,1x,2hfw,1x,2hlw)')
      endif

      n=1
      do 70 i=1,kk
      if(i.ne.1) go to 62
      if(lpres(1).ne.2000) go to 62
      if(l.eq.0) go to 62              ! l is unpacked above
      go to 63
   62 continue
      if(lpres(n).eq.   0) go to 63
      if(ip(i).gt.lpres(n)) go to 70
      if(ip(i).eq.lpres(n)) go to 63
      n=n+1
      if(lpres(n).eq.0) go to 10
      go to 62
   63 continue
      jj=i
      avz(i)=   avz(i)-1000
      avt(i)=   avt(i)-1000
      avu(i)=   avu(i)-2000
      avv(i)=   avv(i)-2000
      if (isw.eq.2) then    ! to print u and v along with dir and spd
	  zvar(i)=avu(i)    ! store the data in another location
	  tvar(i)=avv(i)
      endif
      if (isw.gt.0) then
          iu=0
          iv=0
          if (ig(i).ne.0) then
              iu=avu(i)
              iv=avv(i)
              u =avu(i)*.1
              v =avv(i)*.1
              if (abs(u)+abs(v).ne.0.) then
                  avu(i)=acon*atan2(u,v)+180.5
                  avv(i)=sqrt(u*u+v*v)*10.+.5
              endif
          endif
      endif
   66 continue
      avuv(i)   = avuv(i)-50000
      avvlw(i)  = avvlw(i)-4000
      avulw(i)  = avulw(i)-4000
      avvcpt(i) = avvcpt(i)-16000
      avucpt(i) = avucpt(i)-16000
      avvgz(i)  = avvgz(i)-16000
      avugz(i)  = avugz(i)-16000
      if (isw.gt.-1 .and. isw.eq.0) then
                    write (*,'(1x,i4,i6,i5,3i3,2i6,i7,2i5
     *                        ,i3,2i6,i3,4i7,2i5,i6,4i3)')
     *                         ip(jj),avz(jj),avt(jj),id(jj),avdp(jj)
     *                        ,nf(jj),avu(jj),avv(jj),avuv(jj),up(jj)
     *                        ,vp(jj),ig(jj),avulw(jj),avvlw(jj)               
     *                        ,iuvwn(jj),avucpt(jj),avvcpt(jj),avugz(jj)
     *                        ,avvgz(jj),zvar(jj),tvar(jj),uvvar(jj)
     *                        ,fstz(jj),finz(jj),fstw(jj),finw(jj)
      elseif (isw.gt.-1 .and. isw.ge.1) then
                    write (*,'(1x,i4,i6,i5,3i3,i4,''/'',i4,i7,2i5
     *                        ,i3,2i6,i3,4i7,2i5,i6,4i3)')
     *                         ip(jj),avz(jj),avt(jj),id(jj),avdp(jj)
     *                        ,nf(jj),avu(jj),avv(jj),avuv(jj),up(jj)
     *                        ,vp(jj),ig(jj),avulw(jj),avvlw(jj)
     *                        ,iuvwn(jj),avucpt(jj),avvcpt(jj),avugz(jj)
     *                        ,avvgz(jj),zvar(jj),tvar(jj),uvvar(jj)
     *                        ,fstz(jj),finz(jj),fstw(jj),finw(jj)
      endif

      lflag= 1    ! useable data flag
      nsta = 1
      nyr  = nyear-nyrstrt+1 
      if (ktime.eq. 0) ntm = 1
c c c if (ktime.eq.12) ntm = 2
       
      do 68 np=0,npmax
      if (ip(jj).eq.lpres(np+1)) then  ! the "+1" handles offset
          xx(ntm,np,nmo,nyr, 1,nsta) = avz(jj)         
          xx(ntm,np,nmo,nyr, 2,nsta) = avt(jj)*0.1
          xx(ntm,np,nmo,nyr, 3,nsta) = avu(jj)*0.1
          xx(ntm,np,nmo,nyr, 4,nsta) = avv(jj)*0.1
          xx(ntm,np,nmo,nyr, 5,nsta) = avdp(jj)*0.1
          xx(ntm,np,nmo,nyr, 6,nsta) = avulw(jj)*0.1/597.3
          xx(ntm,np,nmo,nyr, 7,nsta) = avvlw(jj)*0.1/597.3
          xx(ntm,np,nmo,nyr, 8,nsta) = avucpt(jj)/0.24
          xx(ntm,np,nmo,nyr, 9,nsta) = avvcpt(jj)/0.24
          xx(ntm,np,nmo,nyr,10,nsta) = zvar(jj)
          xx(ntm,np,nmo,nyr,11,nsta) = tvar(jj)*0.1
          xx(ntm,np,nmo,nyr,12,nsta) = up(jj)*0.1
          xx(ntm,np,nmo,nyr,13,nsta) = vp(jj)*0.1
          xx(ntm,np,nmo,nyr,14,nsta) = 
     *                   wx(avdp(jj)*0.1,real(ip(jj)) )  
      endif
   68 continue

   70 continue    ! end "i" loop
      go to 10
   99 continue

      call clsgks

      end
c -----------------------------------
      subroutine tsplot (xx,ntms,npmax,nmos,nyrs,nvmax,nstmax,xmsg
     *                  ,ivsn,idsta,lat,lon,ielv,namsta
     *                  ,kpres,nsta,namvar,nyrstrt,nyrlast
     *                  ,xxclm,yrmohr,ier)
      
      integer       ntms,npmax,nmos,nyrs,nvmax,nyrstrt,nyrlast
     *      ,       nstmax,nsta,ier
      real          xx(ntms,0:npmax,nmos,nyrs,nvmax,nstmax), xmsg
      real          xxclm(ntms,0:npmax,nmos,nvmax,nstmax)
      real          yrmohr(ntms,nmos,nyrs)

      integer       kpres(0:36)  ! note (1:37) ==> (0:36)

      character*(*) namsta
      character*(*) namvar(nvmax)

      real tsplt(ntms,nmos,nyrs), gwnd(4,2), wrkeda(4*nmos*nyrs) 
      data (gwnd(i,1),i=1,4)/ 0.00, 1.00, 0.00, 0.50 /                          
      data (gwnd(i,2),i=1,4)/ 0.00, 1.00, 0.50, 1.00 /                          

      character title*80

      data knt /0/
      save knt
      
      knt = knt+1
      write (*,'('' SUB TSPLOT: '',i5,i8,3i7,1x,a)') 
     *              knt,idsta,lat,lon,ielv,namsta(1:32)

      do np=0,npmax
         if (kpres(np).eq. 850 .or. kpres(np).eq.700) then

             do nv=2,14                 

                IF (NV.EQ.2 .OR. NV.EQ.5 .OR. NV.EQ.14) GOTO 66
                GO TO 88
   66           CONTINUE 

               do nyr=1,nyrs
                 do nmo=1,nmos
                   do ntm=1,ntms
                      tsplt(ntm,nmo,nyr) = xx(ntm,np,nmo,nyr,nv,nsta)
                   enddo     ! end "ntm"
                 enddo       ! end "nmo"
               enddo         ! end "nyr"
               call agseti ('frame.',2)
               call agsetp ('graph window.', gwnd(1,2),4)
               write (title,"(a,2x,a,2x,i5,' mb')") 
     *                    namsta(1:10),namvar(nv)(1:4), kpres(np)
               call ezxy (yrmohr,tsplt,ntms*nmos*nyrs,title)

               nmo1  = 0
               nyr1  = 0
               nyrmo = 0
               do nyr=1,nyrs
                 do nmo=1,nmos
                   do ntm=1,ntms
                      if (xx(ntm,np,nmo,nyr,nv,nsta).ne.xmsg .and.
     *                    xxclm(ntm,np,nmo,nv,nsta).ne.xmsg) then
                          tsplt(ntm,nmo,nyr) =xx(ntm,np,nmo,nyr,nv,nsta)
     *                                       -xxclm(ntm,np,nmo,nv,nsta)
                          nyrmo = nyrmo+1
                          if (nmo1.eq.0) then
                              nstrt = nyr*100+nmo
                              nmo1  = nmo
                              nyr1  = nyr
                          endif
                          nlast = nyr*100+nmo
                          nmo2  = nmo
                          nyr2  = nyr 
                          
                      else
                          tsplt(ntm,nmo,nyr) =xmsg
                      endif
                   enddo     ! end "ntm"
                 enddo       ! end "nmo"
               enddo         ! end "nyr"

               rnull = 0.0
               rcoef = xmsg
               alpha = xmsg
               call trtest (yrmohr,tsplt,ntms*nmos*nyrs,xmsg
     *                     ,rnull,trnd1,alpha,ier)
               if (trnd1.ne.xmsg) then
                   trnd1 = trnd1*real(ntms*120)     ! for trend/decade 
               else
                   trnd1 = -99.99
               endif

               ier    = 0
               tol    = 0.001
               nsteps = 100
               nptcrt = 120               
               call reslnx  (yrmohr,tsplt,ntms*nmos*nyrs
     *                      ,xmsg,nptcrt,trnd2,yint,wrkeda,4*nmos*nyrs  
     *                      ,.false.,nsteps,tol,ier)
               if (trnd2.ne.xmsg .and. ier.eq.0) then
                   trnd2 = trnd2*real(ntms*120)     ! for trend/decade 
               else
                   trnd2 = -99.99
               endif
  
               call agsetp ('graph window.', gwnd(1,1),4)
               write (title,"('Anomalies  TRND=',2f8.2,'$')") 
     *                        trnd1, trnd2 
               call ezxy (yrmohr,tsplt,ntms*nmos*nyrs,title)
               call frame 

   88          continue 
             enddo           ! end "nv"
         endif
      enddo                  ! end "np"

      return
      end
c -----------------------------------
      subroutine climat (xx,ntms,npmax,nmos,nyrs,nvmax,nstmax,xmsg
     *                  ,nyrstrt,nyrlast,nsta,xxclm,ier)

c calculate the monthly climatology at each time, level, variable
      
      integer       ntms,npmax,nmos,nyrs,nvmax,nyrstrt,nyrlast
      real          xx(ntms,0:npmax,nmos,nyrs,nvmax,nstmax), xmsg
      real          xxclm(ntms,0:npmax,nmos,nvmax,nstmax)
      integer       kpres(0:36)  ! note (1:37) ==> (0:36)

      real          work(nmos*nyrs)

      do ntm=1,ntms
        do np=0,npmax-1
          do nmo=1,nmos
            do nv=1,nvmax
              do nyr=1,nyrs
                 work(nyr) = xx(ntm,np,nmo,nyr,nv,nsta) 
              enddo
               call stat2 (work,nyrs,xmsg,xxclm(ntm,np,nmo,nv,nsta)
     *                    ,xxvar,xxsd,nptu,ier)
            enddo
          enddo
        enddo
      enddo
      

      return
      end 
c -----------------------------------
      SUBROUTINE DPCASC(IN,IOUT,NUM)
      DIMENSION IN(*),IOUT(*),IC(64)
      DATA IC/ 72B,101B,102B,103B,104B,105B,106B,107B,
     *        110B,111B,112B,113B,114B,115B,116B,117B,
     *        120B,121B,122B,123B,124B,125B,126B,127B,
     *        130B,131B,132B, 60B, 61B, 62B, 63B, 64B,
     *         65B, 66B, 67B, 70B, 71B, 53B, 55B, 52B,
     *         57B, 50B, 51B, 44B, 75B, 40B, 54B, 56B,
     *         43B,133B,135B, 45B, 42B,137B, 41B, 46B,
     *         47B, 77B, 74B, 76B,100B,134B,136B, 73B/
      DO 100 I=1,NUM
      N=IN(I)+1
      IOUT(I)=IC(N)
  100 CONTINUE
      RETURN
      END
"ENDCAT"

# get other necessary subroutines

get_code eda    EDA
get_code statx  STATXMSG 
get_code thermo THERMO
get_code trtest TRTEST
get_code vectut VECTUTIL 

cat << ! >! stations_wanted
486940 Singapore airport                N0122  E10355  
486980 Singapore Changi airport         N0122  E10359 
!

cat << ! >! DUMMY
403080      yap
403090      koror
404040      ponape
405050      truk
406040      kwaj
407100      majoro
414150      guam
416060      wake
517010      Lima Peru
617050      Pago-Pago
148420      Peoria
215040      Hilo
620010      Easter
707010      Diego Garcia
876010      McMurdo   lousy record 
!

cft77 -emz -Rbc -l main.prt main.f
cat   main.prt

segldr -o main.e $LIB main.o *.o

if ($status == 0) then

    
#   setenv FILIN K4580K
#   if (! -f $FILIN) then
#       if (! -d /usr/tmp/shea) mkdir /usr/tmp/shea
#       cd /usr/tmp/shea
#       msread    $FILIN /DSS/$FILIN
#       cd $TMPDIR
#       if (-d /usr/tmp/shea) ln /usr/tmp/shea/$FILIN  $TMPDIR
#   endif
#   assign -a $FILIN fort.11
    
#   setenv FILIN K4581K
#   if (! -f $FILIN) then
#       if (! -d /usr/tmp/shea) mkdir /usr/tmp/shea
#       cd /usr/tmp/shea
#       msread    $FILIN /DSS/$FILIN
#       cd $TMPDIR
#       if (-d /usr/tmp/shea) ln /usr/tmp/shea/$FILIN  $TMPDIR
#   endif
#   assign -a $FILIN fort.11

    msread    sing1  /SPANGLER/SNGPOR
    assign -a sing1 fort.11
    msread    sing2  /SPANGLER/SNGPR2
    assign -a sing2 fort.12

    main.e < stations_wanted

    if ($status == 0 ) then
 
        echo
        echo '--------> job success <----------'
        rcp gmeta cgdisis:/d1/shea/$PNAME.META
    else
        debug -B -s main.e 
        rcp gmeta cgdisis:/d1/shea/$PNAME.METAERR
    endif
else
        echo
        echo '--------> job aborted <----------'
endif

ls -laF
ja -cst
